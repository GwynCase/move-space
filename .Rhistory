sf.df <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime))))
sf.df <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
dplyr::filter(datetime %within% nestling)
sf.df <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id %in% c('HAR10', 'HAR09', 'HAR04', 'HAR05'))
sf.df <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id %in% c('HAR10', 'HAR09', 'HAR04', 'HAR05'))
sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial()
# Make the kud.
sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD()
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD()
image(kud)
# Load up some libraries.
library('tidyverse')
library('lubridate')
library('adehabitatHR')
library('sf')
# Read in the data.
df <- read.csv('../data/processed/telem_all.csv',
header=TRUE, stringsAsFactors=FALSE) %>%
drop_na('lat')
# Do the datetime thing.
df$datetime <- ymd_hms(df$datetime, tz='America/Vancouver')
# Do the spatial thing.
sf.df <- st_as_sf(df, coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Define period of interest
nestling <- interval(ymd(20190511), ymd(20190710))
# Filter desired period, tags.
sf.df <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id %in% c('HAR10', 'HAR09', 'HAR04', 'HAR05'))
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD()
image(kud)
# Load up some libraries.
library('tidyverse')
library('lubridate')
library('adehabitatHR')
library('sf')
# Read in the data.
df <- read.csv('../data/processed/telem_all.csv',
header=TRUE, stringsAsFactors=FALSE) %>%
drop_na('lat')
# Do the datetime thing.
df$datetime <- ymd_hms(df$datetime, tz='America/Vancouver')
# Do the spatial thing.
sf.df <- st_as_sf(df, coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Define period of interest
nestling <- interval(ymd(20190511), ymd(20190710))
# Filter desired period, tags.
sf.df <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id %in% c('HAR10', 'HAR09', 'HAR04', 'HAR05'))
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD()
image(kud)
getverticeshr(kud)
getverticeshr(kud, percent=50)
getverticeshr(kud, percent=50, unin = 'm', unout='m2')
getverticeshr(kud, percent=25, unin = 'm', unout='m2')
sf.ska <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id == 'HAR05')
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD()
image(kud.ska)
getverticeshr(kud.ska, percent=25, unin = 'm', unout='m2')
v.ska <- getverticeshr(kud.ska, percent=25, unin = 'm', unout='m2')
plot(v.ska)
v.ska <- getverticeshr(kud.ska, percent=50, unin = 'm', unout='m2')
plot(v.ska)
v.ska <- getverticeshr(kud.ska, percent=75, unin = 'm', unout='m2')
plot(v.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin = 'm', unout='m2')
plot(v.ska)
v.ska <- getverticeshr(kud.ska, percent=seq(10, 60, 10), unin='m', unout='m2')
v.ska <- getverticeshr(kud.ska, percent=50, unin='m', unout='m2')
plot(v.ska)
v.ska <- getverticeshr(kud.ska, percent=50, unin='m', unout='m2')
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=3)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=30)
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=50, unin='m', unout='m2')
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=300)
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=50, unin='m', unout='m2')
x <- seq(-50, 150, by=1.)
y <- seq(-50, 150, by=1.)
You should rerun kernelUD with a larger extent parameter 5
2+6
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=5)
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=50, unin='m', unout='m2')
plot(v.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
plot(v.ska)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD()
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=3)
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
v.ska <- getverticeshr(kud.ska, percent=50, unin='m', unout='m2')
plot(v.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=5)
v.ska <- getverticeshr(kud.ska, percent=50, unin='m', unout='m2')
plot(v.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
plot(v.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=4)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
plot(v.ska)
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
plot(v.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=4, grid=80)
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
plot(v.ska)
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=4, grid=80)
image(kud)
v.all <- getverticeshr(kud, percent=100, unin='m', unout='m2')
plot(v.ska)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=1, grid=80)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0, grid=80)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=1, grid=80)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.5, grid=80)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.75, grid=80)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=80)
image(kud.ska)
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100)
image(kud.ska)
v.ska <- getverticeshr(kud.ska, percent=100, unin='m', unout='m2')
class(kud.ska)
v.ska <- getverticeshr(kud.ska) %>%
plot()
v.ska <- getverticeshr(kud.ska, percent=100) %>%
plot()
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100) %>%
image()
v.all <- getverticeshr(kud) %>%
plot()
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100) %>%
image()
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100)
v.all <- getverticeshr(kud) %>%
plot()
plot(v.all[[1]])
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100)
image(kud)
v.all <- getverticeshr(kud) %>% plot()
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100)
image(kud.ska)
v.ska <- getverticeshr(kud.ska) %>%
plot()
v.ska <- getverticeshr(kud.ska, percent=100) %>%
plot()
v.ska <- getverticeshr(kud.ska, percent=90) %>%
plot()
v.ska <- getverticeshr(kud.ska, percent=80) %>%
plot()
sf.ska <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id == 'HAR05')
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100)
image(kud.ska)
# So that makes it visible, but what is the area?
as.data.frame(v.ska)
# So that makes it visible, but what is the area?
as.data.frame(kud.ska)
class(v.ska)
v.ska <- getverticeshr(kud.ska, percent=80)
class(v.ska)
# So that makes it visible, but what is the area?
as.data.frame(v.ska)
# So that makes it visible, but what is the area?
as.data.frame(v.all)
v.all <- getverticeshr(kud)
# So that makes it visible, but what is the area?
as.data.frame(v.all)
v.all <- getverticeshr(kud)
plot(v.all)
class(kud.ska)
# Let's come back to that later.
# But let's look at contours.
class(kud.ska)
as.data.frame(kud.ska)
xyz <- as.image.SpatialGridDataFrame(kud.ska)
image(kud.ska)
estUDm2spixdf(kud.ska)
pix.ska <- estUDm2spixdf(kud.ska)
class(pix.ska)
View(pix.ska)
getvolumeUD(kud.ska)
vol.pix <- getvolumeUD(kud.ska)
vol.ska <- getvolumeUD(kud.ska)
xyzv <- as.image.SpatialGridDataFrame(vol.ska)
v.ska <- getverticeshr(kud.ska, percent=75)
plot(v.ska, add=TRUE)
class(pix.ska)
plot(pix.ska)
image(pix.ska)
# Load up some libraries.
library('tidyverse')
library('lubridate')
library('adehabitatHR')
library('sf')
# Read in the data.
df <- read.csv('../data/processed/telem_all.csv',
header=TRUE, stringsAsFactors=FALSE) %>%
drop_na('lat')
# Do the datetime thing.
df$datetime <- ymd_hms(df$datetime, tz='America/Vancouver')
# Do the spatial thing.
sf.df <- st_as_sf(df, coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Define period of interest
nestling <- interval(ymd(20190511), ymd(20190710))
# Filter desired period, tags.
sf.df <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id %in% c('HAR10', 'HAR09', 'HAR04', 'HAR05'))
# Make the kud.
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD()
image(kud)
kud <- sf.df %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100)
image(kud)
v.all <- getverticeshr(kud)
plot(v.all)
sf.ska <- sf.df %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime)))) %>%
filter(datetime %within% nestling) %>%
filter(id == 'HAR05')
kud.ska <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial() %>%
kernelUD(extent=0.25, grid=100)
image(kud.ska)
# This gets me just one contour line, at 95%
getverticeshr(kud.ska, percent=95) %>%
plot()
# Let's come back to that later.
# But let's look at contours.
class(kud.ska)
names(kud.ska)
plot(raster(as(kud.ska$HAR05,"SpatialPixelsDataFrame")))
library('raster')
plot(raster(as(kud.ska$HAR05,"SpatialPixelsDataFrame")))
raster(as(kud.ska$HAR05,"SpatialPixelsDataFrame"))
rst.ska <- raster(as(kud.ska$HAR05,"SpatialPixelsDataFrame"))
contour(rst.ska)
View(rst.ska)
kud.ska.df <- as.data.frame.estUD(kud.ska)
# Let's come back to that later.
# But let's look at contours.
class(kud.ska)  #estUDm
kud.ska.df <- as.data.frame.estUD(kud.ska)
kud.ska.df <- as.data.frame(kud.ska)
View(kud.ska)
kud.ska.df <- as.data.frame.estUD(kud.ska)
class(rst.ska)
plot(rst.ska)
kud.ska.df <- as.data.frame(rst.ska)
View(kud.ska.df)
kud.ska.pts <- rasterToPoints(rst.ska)
View(kud.ska.pts)
kud.ska.df <- as.data.frame(kud.ska.pts)
View(kud.ska.df)
View(kud.ska.df)
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour() +
geom_raster(fill=density)
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour() +
geom_raster(fill=ud)
View(kud.ska.df)
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour() +
theme_minimal()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour() +
theme_void()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black') +
theme_void()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(aes(color='black')) +
theme_void()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black') +
theme_void()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
class(kud.ska.df)
kud.ska.df <- raster(as(kud.ska$HAR05,"SpatialPixelsDataFrame")) %>%
rasterToPoints() %>%
as.data.frame()
class(kud.ska.df)
View(kud.ska.df)
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
2+5
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
class(kud.ska.df)
View(kud.ska.df)
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour() +
theme_void()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10)
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
# Convert to a data frame.
kud.ska.df <- raster(as(kud.ska$HAR05,"SpatialPixelsDataFrame")) %>%
rasterToPoints() %>%
as.data.frame()
# Graph it.
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
# Graph it.
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
# OK, let's go back to calculating area.
as.data.frame(v.all)
kud.95 <- getverticeshr(kud, percent=95)
as.data.frame(kud.95)
# OK, let's go back to calculating area.
kud.95 <- getverticeshr(kud, percent=95) %>%
as.data.frame()
library('knitr')
kable(mcp.95, format='pandoc', digits=2, caption='2019 nestling season')
kable(kud.95, format='pandoc', digits=2, caption='2019 nestling season')
# OK, let's go back to calculating area.
kud.95 <- getverticeshr(kud, percent=95, unin='m', unout='ha') %>%
as.data.frame()
kable(kud.95, format='pandoc', digits=2, caption='2019 nestling season')
kernel.area(kud.95, percent=95, unin='m', unout='ha')
kernel.area(kud, percent=95, unin='m', unout='ha')
kud.95 <- kernel.area(kud, percent=95, unin='m', unout='ha') %>%
as.data.frame
kable(kud.95, format='pandoc', digits=2, caption='2019 nestling season')
kud.95 <- kernel.area(kud, percent=95, unin='m', unout='ha') %>%
as.data.frame %>%
`rownames<-`('95% KDEs (ha)')
# OK, let's go back to calculating area.
kud.95 <- getverticeshr(kud, percent=95, unin='m', unout='ha') %>%
as.data.frame()%>%
`rownames<-`('95% KDEs (ha)')
kud.95 <- kernel.area(kud, percent=95, unin='m', unout='ha') %>%
as.data.frame %>%
`rownames<-`('95% KDEs (ha)')
kable(kud.95, format='pandoc', digits=2, caption='2019 nestling season')
kud.95 <- kernel.area(kud, percent=95, unin='m', unout='ha') %>%
as.data.frame %>%
`rownames<-`('95% KDEs (ha)')
kable(kud.95, format='pandoc', digits=2, caption='2019 nestling season')
# Convert to a data frame.
kud.ska.df <- raster(as(kud.ska$HAR05,"SpatialPixelsDataFrame")) %>%
rasterToPoints() %>%
as.data.frame()
# Graph it.
ggplot(kud.ska.df, aes(x, y, z=ud)) +
geom_contour(color='black', bins=10) +
theme_void()
TCR19 <- df %>%
filter(id == 'HAR08')
View(TCR19)
RLK <- df %>%
filter(id == 'HAR04')
RLK <- df %>%
filter(id == 'HAR04') %>%
filter(at.base == 1)
View(RLK)
MTC <- df %>%
filter(id == 'HAR09' & at.base == 1)
View(MTC)
SKA <- df %>%
filter(id == 'HAR05' & at.base == 1)
View(SKA)
