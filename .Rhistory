# Load telemetry data.
source('../src/clean_telemetry.R')
# Rename the data frame.
tl <- df
# tl <- read_csv('../data/processed/telemetry_2018-2019.csv')
# How many tags?
tl %>% distinct(site, year(date), id, sex)
# How much data per tag?
tl %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period)
# Define breeding season.
breeding.2018 <- interval(ymd(20180420), ymd(20180915))
breeding.2019 <- interval(ymd(20190420), ymd(20190915))
breeding.2020 <- interval(ymd(20200420), ymd(20200915))
# Select only points that fall within the breeding season.
tl.breeding <- tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
# Summarize.
tl.breeding %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period) %>%
arrange(site)
# Transform telemetry data to a spatial format.
tl.breeding.sf <- tl.breeding %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make 95% & 50% MCPs
mcp <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=c(50, 95), unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='mcp')
# Make 95% and 50% KDEs.
kde <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
kernelUD() %>%
kernel.area(percent=c(50, 95), unin='m', unout='ha') %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='kde')
# And in the darkness bind them.
homerange <- bind_rows(mcp, kde)
# Add sex info.
homerange <- tl %>% distinct(id, sex) %>% right_join(homerange, by=c('id'))
homerange %>% mutate(group=paste(percent, method, sep='')) %>%
ggplot(aes(x=group, y=area)) +
geom_boxplot() +
theme_classic()
homerange %>% filter(method == 'mcp') %>%
ggplot(aes(x=as.factor(percent), y=area, fill=sex)) +
geom_boxplot() +
labs(title='Home range and core-use area by sex', x='% MCP', y='Area (ha)') +
scale_fill_manual(values=c(f, m)) +
theme_classic() +
theme(text=element_text(family="Lato Semibold"))
homerange %>% filter(method == 'mcp') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% group_by(percent, method) %>%
summarize(mean.area=mean(area))
homerange %>% filter(method == 'kde') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% filter(sex == 'f' & percent == 50)
homerange %>% filter(sex == 'f' & percent == 95)
#write_csv(tl.breeding, '../data/interim/telemetry_problem.csv')
# st_write(mtc.sf, '../data/interim/mtc_breeding_95.shp')
# st_write(max.points, '../data/interim/max_points.shp')
View(homerange)
View(mcp)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
options(scipen=999)
#Load some libraries.
library(tidyverse)
library(sf)
library(lubridate)
library(adehabitatHR)
library(ggplot2)
library(extrafont)
# Define some colors.
m <- '#d36135' # Flame
f <- '#689689' # Polished pine
# Load telemetry data.
source('../src/clean_telemetry.R')
# Rename the data frame.
tl <- df
# tl <- read_csv('../data/processed/telemetry_2018-2019.csv')
# How many tags?
tl %>% distinct(site, year(date), id, sex)
# How much data per tag?
tl %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period)
# Define breeding season.
breeding.2018 <- interval(ymd(20180420), ymd(20180915))
breeding.2019 <- interval(ymd(20190420), ymd(20190915))
breeding.2020 <- interval(ymd(20200420), ymd(20200915))
# Select only points that fall within the breeding season.
tl.breeding <- tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
# Summarize.
tl.breeding %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period) %>%
arrange(site)
# Transform telemetry data to a spatial format.
tl.breeding.sf <- tl.breeding %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make 95% & 50% MCPs
mcp <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=c(50, 95), unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='mcp')
# Make 95% and 50% KDEs.
kde <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
kernelUD() %>%
kernel.area(percent=c(50, 95), unin='m', unout='ha') %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='kde')
# And in the darkness bind them.
homerange <- bind_rows(mcp, kde)
# Add sex info.
homerange <- tl %>% distinct(id, sex) %>% right_join(homerange, by=c('id'))
homerange %>% mutate(group=paste(percent, method, sep='')) %>%
ggplot(aes(x=group, y=area)) +
geom_boxplot() +
theme_classic()
homerange %>% filter(method == 'mcp') %>%
ggplot(aes(x=as.factor(percent), y=area, fill=sex)) +
geom_boxplot() +
labs(title='Home range and core-use area by sex', x='% MCP', y='Area (ha)') +
scale_fill_manual(values=c(f, m)) +
theme_classic() +
theme(text=element_text(family="Lato Semibold"))
homerange %>% filter(method == 'mcp') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% group_by(percent, method) %>%
summarize(mean.area=mean(area))
homerange %>% filter(method == 'kde') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% filter(sex == 'f' & percent == 50)
homerange %>% filter(sex == 'f' & percent == 95)
#write_csv(tl.breeding, '../data/interim/telemetry_problem.csv')
# st_write(mtc.sf, '../data/interim/mtc_breeding_95.shp')
# st_write(max.points, '../data/interim/max_points.shp')
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
options(scipen=999)
#Load some libraries.
library(tidyverse)
library(sf)
library(lubridate)
library(adehabitatHR)
library(ggplot2)
library(extrafont)
# Define some colors.
m <- '#d36135' # Flame
f <- '#689689' # Polished pine
# Load telemetry data.
source('../src/clean_telemetry.R')
# Rename the data frame.
tl <- df
# tl <- read_csv('../data/processed/telemetry_2018-2019.csv')
# How many tags?
tl %>% distinct(site, year(date), id, sex)
# How much data per tag?
tl %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period)
# Define breeding season.
breeding.2018 <- interval(ymd(20180420), ymd(20180915))
breeding.2019 <- interval(ymd(20190420), ymd(20190915))
breeding.2020 <- interval(ymd(20200420), ymd(20200915))
# Select only points that fall within the breeding season.
tl.breeding <- tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
# Summarize.
tl.breeding %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period) %>%
arrange(site)
# Transform telemetry data to a spatial format.
tl.breeding.sf <- tl.breeding %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make 95% & 50% MCPs
mcp <- tl.breeding.sf %>%
filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=c(50, 95), unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='mcp')
# Make 95% and 50% KDEs.
kde <- tl.breeding.sf %>%
filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
kernelUD() %>%
kernel.area(percent=c(50, 95), unin='m', unout='ha') %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='kde')
# And in the darkness bind them.
homerange <- bind_rows(mcp, kde)
# Add sex info.
homerange <- tl %>% distinct(id, sex) %>% right_join(homerange, by=c('id'))
homerange %>% mutate(group=paste(percent, method, sep='')) %>%
ggplot(aes(x=group, y=area)) +
geom_boxplot() +
theme_classic()
homerange %>% filter(method == 'mcp') %>%
ggplot(aes(x=as.factor(percent), y=area, fill=sex)) +
geom_boxplot() +
labs(title='Home range and core-use area by sex', x='% MCP', y='Area (ha)') +
scale_fill_manual(values=c(f, m)) +
theme_classic() +
theme(text=element_text(family="Lato Semibold"))
homerange %>% filter(method == 'mcp') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% group_by(percent, method) %>%
summarize(mean.area=mean(area))
homerange %>% filter(method == 'kde') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% filter(sex == 'f' & percent == 50)
homerange %>% filter(sex == 'f' & percent == 95)
#write_csv(tl.breeding, '../data/interim/telemetry_problem.csv')
# st_write(mtc.sf, '../data/interim/mtc_breeding_95.shp')
# st_write(max.points, '../data/interim/max_points.shp')
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
options(scipen=999)
#Load some libraries.
library(tidyverse)
library(sf)
library(lubridate)
library(adehabitatHR)
library(ggplot2)
library(extrafont)
# Define some colors.
m <- '#d36135' # Flame
f <- '#689689' # Polished pine
# Load telemetry data.
source('../src/clean_telemetry.R')
# Rename the data frame.
tl <- df
# tl <- read_csv('../data/processed/telemetry_2018-2019.csv')
# How many tags?
tl %>% distinct(site, year(date), id, sex)
# How much data per tag?
tl %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period)
# Define breeding season.
breeding.2018 <- interval(ymd(20180420), ymd(20180915))
breeding.2019 <- interval(ymd(20190420), ymd(20190915))
breeding.2020 <- interval(ymd(20200420), ymd(20200915))
# Select only points that fall within the breeding season.
tl.breeding <- tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
# Summarize.
tl.breeding %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period) %>%
arrange(site)
# Transform telemetry data to a spatial format.
tl.breeding.sf <- tl.breeding %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make 95% & 50% MCPs
mcp <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=c(50, 95), unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='mcp')
# Make 95% and 50% KDEs.
kde <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
kernelUD() %>%
kernel.area(percent=c(50, 95), unin='m', unout='ha') %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='kde')
# And in the darkness bind them.
homerange <- bind_rows(mcp, kde)
# Add sex info.
homerange <- tl %>% distinct(id, sex) %>% right_join(homerange, by=c('id'))
homerange %>% mutate(group=paste(percent, method, sep='')) %>%
ggplot(aes(x=group, y=area)) +
geom_boxplot() +
theme_classic()
homerange %>% filter(method == 'mcp') %>%
ggplot(aes(x=as.factor(percent), y=area, fill=sex)) +
geom_boxplot() +
labs(title='Home range and core-use area by sex', x='% MCP', y='Area (ha)') +
scale_fill_manual(values=c(f, m)) +
theme_classic() +
theme(text=element_text(family="Lato Semibold"))
homerange %>% filter(method == 'mcp') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% group_by(percent, method) %>%
summarize(mean.area=mean(area))
homerange %>% filter(method == 'kde') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% filter(sex == 'f' & percent == 50)
homerange %>% filter(sex == 'f' & percent == 95)
#write_csv(tl.breeding, '../data/interim/telemetry_problem.csv')
# st_write(mtc.sf, '../data/interim/mtc_breeding_95.shp')
# st_write(max.points, '../data/interim/max_points.shp')
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
options(scipen=999)
#Load some libraries.
library(tidyverse)
library(sf)
library(lubridate)
library(adehabitatHR)
library(ggplot2)
library(extrafont)
# Define some colors.
m <- '#d36135' # Flame
f <- '#689689' # Polished pine
# Load telemetry data.
source('../src/clean_telemetry.R')
# Rename the data frame.
tl <- df
# tl <- read_csv('../data/processed/telemetry_2018-2019.csv')
# How many tags?
tl %>% distinct(site, year(date), id, sex)
# How much data per tag?
tl %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period)
# Define breeding season.
breeding.2018 <- interval(ymd(20180420), ymd(20180915))
breeding.2019 <- interval(ymd(20190420), ymd(20190915))
breeding.2020 <- interval(ymd(20200420), ymd(20200915))
# Select only points that fall within the breeding season.
tl.breeding <- tl %>%
filter(date %in% c(breeding.2018, breeding.2019, breeding.2020))
# Summarize.
tl.breeding %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period) %>%
arrange(site)
# Transform telemetry data to a spatial format.
tl.breeding.sf <- tl.breeding %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make 95% & 50% MCPs
mcp <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=c(50, 95), unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='mcp')
# Transform telemetry data to a spatial format.
tl.breeding.sf <- tl.breeding %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make 95% & 50% MCPs
mcp <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=c(50, 95), unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='mcp')
# Select only points that fall within the breeding season.
tl.breeding <- tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE)
# Import conflict settings.
source('../src/conflicted.R')
options(scipen=999)
#Load some libraries.
library(tidyverse)
library(sf)
library(lubridate)
library(adehabitatHR)
library(ggplot2)
library(extrafont)
# Define some colors.
m <- '#d36135' # Flame
f <- '#689689' # Polished pine
# Load telemetry data.
source('../src/clean_telemetry.R')
# Rename the data frame.
tl <- df
# tl <- read_csv('../data/processed/telemetry_2018-2019.csv')
# How many tags?
tl %>% distinct(site, year(date), id, sex)
# How much data per tag?
tl %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period)
# Define breeding season.
breeding.2018 <- interval(ymd(20180420), ymd(20180915))
breeding.2019 <- interval(ymd(20190420), ymd(20190915))
breeding.2020 <- interval(ymd(20200420), ymd(20200915))
# Select only points that fall within the breeding season.
tl.breeding <- tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
# Summarize.
tl.breeding %>% group_by(id) %>%
mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>%
distinct(id, site, n.points, min, max, period) %>%
arrange(site)
# Transform telemetry data to a spatial format.
tl.breeding.sf <- tl.breeding %>% st_as_sf(coords=c('lon', 'lat')) %>%
st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%
st_transform("+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Make 95% & 50% MCPs
mcp <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
mcp.area(percent=c(50, 95), unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='mcp')
# Make 95% and 50% KDEs.
kde <- tl.breeding.sf %>%
#filter(id != 'HAR03') %>%
select(id, geometry) %>%
as_Spatial() %>%
kernelUD() %>%
kernel.area(percent=c(50, 95), unin='m', unout='ha') %>%
rownames_to_column(var='percent') %>%
pivot_longer(-percent, names_to='id', values_to='area') %>%
mutate(method='kde')
# And in the darkness bind them.
homerange <- bind_rows(mcp, kde)
# Add sex info.
homerange <- tl %>% distinct(id, sex) %>% right_join(homerange, by=c('id'))
homerange %>% mutate(group=paste(percent, method, sep='')) %>%
ggplot(aes(x=group, y=area)) +
geom_boxplot() +
theme_classic()
homerange %>% filter(method == 'mcp') %>%
ggplot(aes(x=as.factor(percent), y=area, fill=sex)) +
geom_boxplot() +
labs(title='Home range and core-use area by sex', x='% MCP', y='Area (ha)') +
scale_fill_manual(values=c(f, m)) +
theme_classic() +
theme(text=element_text(family="Lato Semibold"))
homerange %>% filter(method == 'mcp') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% group_by(percent, method) %>%
summarize(mean.area=mean(area))
homerange %>% filter(method == 'kde') %>%
group_by(sex, percent) %>%
summarize(n=n(), mean.area=mean(area))
homerange %>% filter(sex == 'f' & percent == 50)
homerange %>% filter(sex == 'f' & percent == 95)
#write_csv(tl.breeding, '../data/interim/telemetry_problem.csv')
# st_write(mtc.sf, '../data/interim/mtc_breeding_95.shp')
# st_write(max.points, '../data/interim/max_points.shp')
tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
tl %>%
filter(date %within% breeding.2019)
tl %>%
filter(date %within% c(breeding.2019))
tl %>%
filter(date %within% c(breeding.2019, breeding.2020))
tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
tl %>%
filter(date %within% c(breeding.2018))
tl %>%
filter(date %within% c(breeding.2018, breeding.2019))
tl %>%
filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))
tl %>%
filter(date %within% c(breeding.2018, breeding.2020))
