tibble() %>%
select(filname=1)
head(snap)
snap <- snapshot$info %>%
rownames_to_column() %>%
tibble() %>%
dplyr::select(1, 6)
snap <- snapshot$info %>%
rownames_to_column() %>%
tibble() %>%
dplyr::select(1, 5)
View(snap)
snap <- snapshot$info %>%
rownames_to_column() %>%
tibble()
View(snap)
str(snap)
snap <- snapshot$info %>%
rownames_to_column() %>%
tibble() %>%
dplyr::select(..mode)
snap <- snapshot$info %>%
rownames_to_column() %>%
tibble() %>%
dplyr::select(mode)
colnames(snap)
snap <- snapshot$info %>%
rownames_to_column() %>%
as.data.frame()
colnames(snap)
snap <- snapshot$info %>%
rownames_to_column() %>%
as.data.frame()  %>%
dplyr::select(filename=rowname, timestamp=ctime)
head(snap)
snap <- snapshot$info %>%
rownames_to_column() %>%
as.data.frame()
file.info(../data/raw/TMC/RCNX0010.JPG)
file.info('../data/raw/TMC/RCNX0010.JPG')
pic <- file.info('../data/raw/TMC/RCNX0010.JPG')
pic
View(pic)
# Load some libraries.
library('tidyverse')
install.packages("exiftoolr")
library('exiftoolr')
exiftoolr::exif_read('../data/raw/TMC/RCNX0010.JPG')
library('exiftoolr')
exif_read('../data/raw/TMC/RCNX0010.JPG')
install.exiftool()
install_exiftool()
exif_read('../data/raw/TMC/RCNX0010.JPG')
exif_read('VI_sites.R')
exif_read('../data/raw/TMC')
exif_read('../data/raw/TMC', recursive=TRUE)
exif_read(../data/raw/TMC, recursive=TRUE)
path.expand("~/Rplot.jpeg")
path.expand("~/RCNX0010.JPG")
file.exists("~/RCNX0010.JPG")
exif_read(path.expand("~/RCNX0010.JPG"))
e.0010 <- exif_read(path.expand("~/RCNX0010.JPG"))
View(e.0010)
e.0010 <- exif_read(path.expand('~/RCNX0010.JPG'),
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
e.0010 <- exif_read('../data/raw/TMC/RCNX0010.JPG',
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
path.expand("~/RCNX0010.JPG")
e.0010 <- exif_read('C:/Users/Gwyn/Documents/RCNX0010.JPG',
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
e.0010 <- exif_read('C:/Users/Gwyn/sfuvault/move-space/data/raw/TMC/RCNX0010.JPG',
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
e.0010 <- exif_read('C:/Users/Gwyn/sfuvault/move-space/data/raw/TMC/RCNX0011.JPG',
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
files <- list.files('../data/raw/TMC')
files <-
list.files('../data/raw/TMC')
list.files('../data/raw/TMC')
list.files('../data/raw/TMC')
# Make a list of all the files in the directory.
files <- list.files('../data/raw/TMC')
e.0010 <- exif_read('../data/raw/TMC/RCNX0011.JPG',
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
e.0010 <- exif_read(c('../data/raw/TMC/RCNX0011.JPG', '../data/raw/TMC/RCNX0012.JPG'),
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
View(e.0010)
df <- exif_read(files,
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
# Make a list of all the files in the directory.
files <- list.files('../data/raw/TMC', full.names=TRUE)
df <- exif_read(files,
tags=c('filename', 'DateTimeOriginal', 'SerialNumber'))
View(df)
df <- exif_read(files,
tags=c('filename', 'CreateDate', 'SerialNumber'))
TMC.files <- list.files('D:/RECONYX/TwentyMileCreek/100_RECNX_TwentyMile', full.names=TRUE)
TMC.files <- list.files('D:/RECONYX/TwentyMileCreek/100_RECNX_TwentyMile/', full.names=TRUE)
file.exists(D:/RECONYX/TwentyMileCreek/100_RECNX_TwentyMile/RCNX0010.JPG)
file.exists('D:/RECONYX/TwentyMileCreek/100_RECNX_TwentyMile/RCNX0010.JPG')
file.exists('D:/RECONYX/TwentyMileCreek/100RECNX_TwentyMile/RCNX0010.JPG')
TMC.files <- list.files('D:/RECONYX/TwentyMileCreek/100RECNX_TwentyMile', full.names=TRUE)
TMC.photos <- exif_read(TMC.files,
tags=c('filename', 'CreateDate', 'SerialNumber'))
View(TMC.photos)
photos <- TMC.photos %>%
dplyr::select(!SourceFile)
photos <- TMC.photos %>%
dplyr::select(FileName, CreateDate, SerialNumber)
photos <- TMC.photos %>%
dplyr::select(FileName, CreateDate, SerialNumber, SiteName='TMC')
photos <- TMC.photos %>%
dplyr::select(FileName, CreateDate, SerialNumber) %>%
mutate(site=TMC)
photos <- TMC.photos %>%
dplyr::select(FileName, CreateDate, SerialNumber) %>%
mutate(site='TMC')
View(photos)
library('lubridate')
photos <- TMC.photos %>%
dplyr::select(FileName, CreateDate, SerialNumber) %>%
mutate(site='TMC') %>%
ymd_hms(CreateDate)
photos <- TMC.photos %>%
dplyr::select(FileName, CreateDate, SerialNumber) %>%
ymd_hms(CreateDate) %>%
mutate(site='TMC')
head(photos$CreateDate)
photos <- TMC.photos %>%
dplyr::select(FileName, CreateDate, SerialNumber) %>%
ymd_hms(photos$CreateDate) %>%
mutate(site='TMC')
class(photos$CreateDate)
ymd_hms(photos$CreateDate)
ymd_hms(photos$CreateDate tz='America/Vancouver')
ymd_hms(photos$CreateDate, tz='America/Vancouver')
photos$CreateDate <- ymd_hms(photos$CreateDate, tz='America/Vancouver')
photos %>% summarize(first=min(datetime), last=max(datetime),
length=difftime(last, first))
# Make it pretty.
photos <- TMC.photos %>%
dplyr::select(filename=FileName, datetime=CreateDate, serial=SerialNumber) %>%
mutate(site='TMC')
# Do the datetime thing.
photos$CreateDate <- ymd_hms(photos$datetime, tz='America/Vancouver')
photos %>% summarize(first=min(datetime), last=max(datetime),
length=difftime(last, first))
# Do the datetime thing.
photos$datetime <- ymd_hms(photos$datetime, tz='America/Vancouver')
class(photos$datetime)
photos %>% summarize(first=min(datetime), last=max(datetime),
length=difftime(last, first))
# When was it recording?
photos %>% summarize(first=min(datetime), last=max(datetime),
length=difftime(last, first))
# How many photos per day?
photos %>% floor_date(unit='days')
# How many photos per day?
photos$datetime %>% floor_date(unit='days')
# How many photos per day?
photos$datetime %>% floor_date(unit='days') %>%
group_by()
# How many photos per day?
photos$datetime %>% floor_date(unit='days')
# How many photos per day?
photos %>% group_by(datetime) %>%
summarize(mean())
# How many photos per day?
photos %>% group_by(datetime) %>%
summarize(n())
# How many photos per day?
photos %>% floor_date(datetime, units='days') %>%
group_by(datetime) %>%
summarize(n())
# How many photos per day?
photos %>% floor_date(x=datetime, units='days') %>%
group_by(datetime) %>%
summarize(n())
# How many photos per day?
photos %>% floor_date(datetime, units='days') #%>%
# How many photos per day?
photos %>% floor_date(datetime, unit='days') #%>%
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) #%>%
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days'))
# Make it pretty.
photos <- TMC.photos %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site='TMC')
# Do the datetime thing.
photos$datetime <- ymd_hms(photos$datetime, tz='America/Vancouver')
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime)
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime) %>%
summarize(n())
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime) %>%
summarize(n()) %>%
mean(n())
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime) %>%
summarize(n()) %>%
mean()
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime) %>%
summarize(mean())
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime) %>%
summarize(mean(n()))
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime) %>%
summarize(n())
# Make a list of all the files in the directory.
sample.files <- list.files('../data/raw/TMC', full.names=TRUE)
# Extract EXIF data from the files and make a dataframe.
sample.exif <- exif_read(sample.files,
tags=c('filename', 'CreateDate', 'SerialNumber'))
# Make it pretty.
sample.photos <- sample.exif %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site='TMC')
View(sample.photos)
# Export as csv.
write.csv(sample.photos, file='../data/iterim/sample_photos.csv',
row.names=FALSE)
class(sample.photos)
# Export as csv.
write.csv(sample.photos, file='../data/interim/sample_photos.csv',
row.names=FALSE)
df <- read.csv('../data/processed/sample_photos_cooked.csv', header=TRUE,
stringsAsFactors=FALSE)
View(df)
str(df)
# Now I've re-loaded it...
str(df$interest)
# Now I've re-loaded it...
df2 <- df %>%
ifelse(interest == '', 'no', x)
# Now I've re-loaded it...
df2 <- df %>%
filter(interest != '')
View(df2)
# Now I've re-loaded it...
df2 <- df %>%
filter(interest != '') %>%
dplyr::select(filename)
file.copy(from='..data/raw/TMC/interest/RCNX0021.JPG',
to='..data/raw/TMC/interest', overwrite=TRUE)
file.copy(from='..data/raw/TMC/RCNX0021.JPG',
to='..data/raw/TMC/interest', overwrite=TRUE)
file.copy(from=..data/raw/TMC/RCNX0021.JPG,
to=..data/raw/TMC/interest, overwrite=TRUE)
file.copy(from='..data/raw/TMC/RCNX0021.JPG',
to='..data/raw/TMC/interest', overwrite=TRUE)
dir.create('test')
file.copy(from='20191217_UD.Rmd',
to='..data/raw/TMC/interest', overwrite=TRUE)
file.copy(from='20191217_UD.Rmd',
to='test', overwrite=TRUE)
files
list.files('../data/raw/TMC', full.names=TRUE)
file.copy(from='../data/raw/TMC/RCNX0001.JPG',
to='../data/raw/TMC/interest', overwrite=TRUE)
class(df2)
class(files)
View(TMC.photos)
View(sample.exif)
intersect(sample.exif$FileName, df2$filename)
sample.exif %>%
(intersect(sample.exif$FileName, df2$filename))
sample.exif %>%
intersect(sample.exif$FileName, df2$filename)
sample.exif %>%
filter(FileName %in% df2$filename)
sample.exif %>%
filter(FileName %in% df2$filename) %>%
dplyr::select(FileName)
sample.exif %>%
filter(FileName %in% df2$filename) %>%
dplyr::select(SourceFile)
interest <- sample.exif %>%
filter(FileName %in% df2$filename) %>%
dplyr::select(SourceFile)
file.copy(from=interest,
to='../data/raw/TMC/interest', overwrite=TRUE)
interest <- sample.exif %>%
filter(FileName %in% df2$filename) %>%
dplyr::select(SourceFile) %>%
as.character()
file.copy(from=interest,
to='../data/raw/TMC/interest', overwrite=TRUE)
file.copy(from=files,
to='../data/raw/TMC/interest', overwrite=TRUE)
head(interest)
head(files)
class(files)
class(interest)
interest <- sample.exif %>%
filter(FileName %in% df2$filename) %>%
dplyr::select(SourceFile) %>%
list()
View(interest)
interest
interest[[]]
interest[[1]]
interest[[1]]$SourceFile
file.copy(from=interest[[1]]$SourceFile,
to='../data/raw/TMC/interest', overwrite=TRUE)
interest <- sample.exif %>%
filter(FileName %in% df2$filename) %>%
dplyr::select(SourceFile)
file.copy(from=interest$SourceFile,
to='../data/raw/TMC/interest', overwrite=TRUE)
write.csv(sample.photos, file='../data/interim/TMC_photos.csv',
row.names=FALSE)
# Load some libraries.
library('tidyverse')
library('exiftoolr')
library('lubridate')
# This installs exiftool, which lets me view EXIF data.
install_exiftool()
# Make a list of all the files in the directory.
TMC.files <- list.files('D:/RECONYX/TwentyMileCreek/100RECNX_TwentyMile', full.names=TRUE)
# Extract EXIF data from the files and make a dataframe.
TMC.photos <- exif_read(TMC.files,
tags=c('filename', 'CreateDate', 'SerialNumber'))
# Make it pretty.
photos <- TMC.photos %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site='TMC')
# Do the datetime thing.
photos$datetime <- ymd_hms(photos$datetime, tz='America/Vancouver')
# When was it recording?
photos %>% summarize(first=min(datetime), last=max(datetime),
length=difftime(last, first))
# How many photos per day?
photos %>%
mutate(datetime=floor_date(datetime, unit='days')) %>%
group_by(datetime) %>%
summarize(n())
View(TMC.photos)
# Add columns
TMC.photos <- TMC.photos %>%
add_column(interest='', live.chicks='', class='', family='',
genus='', species='', common='')
View(TMC.photos)
# Add columns
TMC.photos <- TMC.photos %>%
add_column(interest='', live.chicks='', class='', family='',
genus='', species='', common='', comments='')
TMC.photos <- TMC.photos %>%
add_column(comments='')
write.csv(TMC.photos, file='../data/interim/TMC_photos.csv',
row.names=FALSE)
# Make a toy.
df -> TMC.photos
View(photos)
# Add columns
photos <- photos %>%
add_column(interest='', live.chicks='', class='', family='',
genus='', species='', common='', comments='')
# Save the big csv, just in case.
write.csv(photos, file='../data/interim/TMC_photos.csv',
row.names=FALSE)
# Make a toy.
df -> photos
# Extract EXIF data from the files and make a dataframe.
TMC.photos <- exif_read(TMC.files,
tags=c('filename', 'CreateDate', 'SerialNumber'))
# Make it pretty.
photos <- TMC.photos %>%
dplyr::select(filename=FileName, datetime=CreateDate,
serial=SerialNumber) %>%
mutate(site='TMC')
# Do the datetime thing.
photos$datetime <- ymd_hms(photos$datetime, tz='America/Vancouver')
# Add columns to dataframe for data entry.
photos <- photos %>%
add_column(interest='', live.chicks='', class='', family='',
genus='', species='', common='', comments='')
# Save the big csv, just in case.
write.csv(photos, file='../data/interim/TMC_photos.csv',
row.names=FALSE)
# Make a toy.
df <- photos
split(df, as.Date(df$date))
cut <- split(df, as.Date(df$date))
View(cut)
lapply(cut, print())
cut[[1]]
# Split by date
cut <- split(df, week(df$date))
View(cut)
lapply(seq_along(cut), function(x)
write.csv(cut[[x]], file=paste0('TMC_photos', x, '.csv'), row.names=FALSE))
seq_along(cut)
seq_along(cut)
purrr::walk(seq_along(cut), function(x){
write.csv(cut[[x]],
file=paste('TMC_photos', '_', as.character(x), '.csv', sep=''),
row.names=FALSE)
})
# Make a folder for all this.
# Happens just once.
dir.create('../data/interim/n_cam_csv')
write.csv(cut[[x]],
file=paste('../data/interim/n_cam_csv', 'TMC_photos', '_',
as.character(x), '.csv', sep=''),
row.names=FALSE)
# And save each week at its own csv.
purrr::walk(seq_along(cut), function(x){
write.csv(cut[[x]],
file=paste('../data/interim/n_cam_csv', 'TMC_photos', '_',
as.character(x), '.csv', sep=''),
row.names=FALSE)
})
# And save each week at its own csv.
purrr::walk(seq_along(cut), function(x){
write.csv(cut[[x]],
file=paste('../data/interim/n_cam_csv/', 'TMC_photos', '_',
as.character(x), '.csv', sep=''),
row.names=FALSE)
})
library('purrr')
# Load some libraries.
library('tidyverse')
library('lubridate')
vi.2018 <- read.csv('../data/external/VI_surveydata_2018.csv',
header=TRUE, stringsAsFactors=FALSE)
colnames(vi.2018)
# The first column has a strange name, fix that.
vi.2018 <- rename(vi.2018, SiteName=1)
# Select only observations of nests.
vi.nest.assess.2018 <- vi.2018 %>%
filter(NestAssess == 'Yes')
nrow(vi.nest.assess.2018)
n_distinct(vi.nest.assess.2018$SiteName)
# List sites at which nest assessments were conducted.
distinct(vi.nest.assess.2018, SiteName)
# Which ones had active nests?
vi.nest.assess.2018 %>% dplyr::select(SiteName, NestStatus) %>%
filter(NestStatus == 'Active')
# Load 2019 data.
vi.2019 <- read.csv('../data/external/VI_surveydata_2019.csv',
header=TRUE, stringsAsFactors=FALSE)
colnames(vi.2019)
# Also has weird first column name.
vi.2019 <- rename(vi.2019, SiteName=1)
# Problem... different variable names.
vi.2019 %>% group_by(Nest.Assessment) %>%
summarize(n())
# Select only observations of nests.
vi.nest.assess.2019 <- vi.2019 %>% filter(Nest.Status != "")
# List sites at which nest assessments were conducted.
distinct(vi.nest.assess.2019, SiteName)
# Which ones had active nests?
vi.nest.assess.2019 %>% dplyr::select(SiteName, Nest.Status) %>%
filter(Nest.Status == 'Active')
sites.b <- intersect(vi.nest.assess.2018$SiteName,
vi.nest.assess.2019$SiteName)
sites.b
voucher.2019 <- vi.2019 %>% filter(Sign.Type %in% c('RP', 'DC')) %>%
distinct(vi.2019, SiteName)
voucher.2018 <- vi.2018 %>% filter(SignType == 'FE') %>%
distinct(vi.2019, SiteName)
voucher.sites <- bind_rows(voucher.2019, voucher.2018, .id='year')
voucher.sites
nest.assess <- union(vi.nest.assess.2018$SiteName,
vi.nest.assess.2019$SiteName)
setdiff(voucher.sites$SiteName, nest.assess)
sites.2019 <- vi.2019 %>% filter(Nest.Status != "") %>%
mutate(a.2019=case_when(Nest.Status == 'Active' ~ 1,
TRUE ~ 0)) %>%
mutate(v.2019=case_when(Sign.Type %in% c('RP', 'DC', 'CR', 'RP') ~ 1,
TRUE ~ 0)) %>%
group_by(SiteName) %>%
summarise(a.2019=max(a.2019), v.2019=max(v.2019)) %>%
dplyr::select(SiteName, a.2019, v.2019)
sites.2018 <- vi.2018 %>% filter(NestStatus != "") %>%
mutate(a.2018=case_when(NestStatus == 'Active' ~ 1,
TRUE ~ 0)) %>%
mutate(v.2018=case_when(SignType %in% c('RP', 'DC', 'CR', 'RP') ~ 1,
TRUE ~ 0)) %>%
group_by(SiteName) %>%
summarise(a.2018=max(a.2018), v.2018=max(v.2018)) %>%
dplyr::select(SiteName, a.2018, v.2018)
sites <- bind_rows(sites.2018, sites.2019) %>%
group_by(SiteName) %>%
summarise(a.2018=max(a.2018), v.2018=max(v.2018),
a.2019=max(a.2019), v.2019=max(v.2019)) %>%
replace_na(list(a.2018=NA, v.2018=0, a.2019=NA, v.2019=0))
View(sites)
