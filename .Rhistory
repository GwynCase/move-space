ska <- df %>%
filter(site == 'SKA') %>%
drop_na('lat')
# Make a classic 90% MCP for comparison.
mcp.90 <- SpatialPoints(ska[, c('lon', 'lat')], proj4string=CRS("+init=epsg:4326")) %>%
mcp(percent=90)
ggplot() +
geom_sf(data=st_as_sf(mcp.90)) +
#theme_minimal() +
theme(panel.grid.major=element_line(color='transparent'),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.background=element_rect(fill='transparent')) +
annotation_scale(style='ticks', location='bl', width_hint=0.4)
# Make sf object.
sf.ska <- st_as_sf(ska, coords=c('lon', 'lat'))
sf.ska <- st_set_crs(sp.ska, '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')
sf.ska <- st_set_crs(sf.ska, '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')
# Transform to UTM so area makes sense.
sf.ska <- st_transform(sp.ska, "+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Transform to UTM so area makes sense.
sf.ska <- st_transform(sf.ska, "+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Look at area.
sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20,100, by=5),
unin='m', unout='ha', plotit = TRUE)
# Look at area.
sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20,100, by=10),
unin='m', unout='ha', plotit = TRUE)
View(sf.ska)
# Look at area.
sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha')
# Look at area.
sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha') %>%
ggplot()
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha')
View(mcp.all)
ggplot(mcp.all)
colnames(mcp.all)
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha') %>%
rename(percent=1)
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha') %>%
rename(percent=0)
rownames(mcp.all)
tibble::rownames_to_column(mcp.all)
tibble::rownames_to_column(mcp.all, var='percent')
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha') %>%
tibble::rownames_to_column(var='percent')
library('tibble')
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha') %>%
rownames_to_column(var='percent') %>%
rename(area = a)
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
rename(area=a)
ggplot(mcp.all, aes(percent, area))
ggplot(mcp.all, aes(percent, area)) +
geom_point()
class(mcp.all$percent)
class(mcp.all$area)
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
mutate(as.numeric(percent)) %>%
rename(area=a)
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='percent') %>%
transmute(as.numeric(percent)) %>%
rename(area=a)
View(mcp.all)
View(mcp.all)
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(percent)) %>%
rename(area=a)
# Look at area.
mcp.all <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
rename(area=a)
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal()
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
theme(panel.grid.major=element_line(color='transparent')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
theme(panel.grid.major=element_line(color='transparent'),
panel.background=element_rect(fill='transparent')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
theme(panel.grid.major=element_line(color='white'),
panel.background=element_rect(fill='transparent')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
theme(panel.grid=element_line(color='white'),
panel.background=element_rect(fill='transparent')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
geom_smooth() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
geom_smooth(se=FALSE) +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.all, aes(percent, area)) +
geom_point() +
theme_minimal() +
geom_smooth(se=FALSE, color='black') +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)')
ggplot(mcp.ska, aes(percent, area)) +
geom_point() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
# Look at area.
mcp.ska <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
rename(area=a)
ggplot(mcp.ska, aes(percent, area)) +
geom_point() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
ggplot(mcp.ska, aes(percent, area)) +
geom_point() +
geom_path() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
# Make sf object.
sf.ska <- st_as_sf(ska, coords=c('lon', 'lat'))
sf.ska <- st_set_crs(sf.ska, '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')
# Transform to UTM so area makes sense.
sf.ska <- st_transform(sf.ska, "+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Look at area.
mcp.ska <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
rename(area=a)
ggplot(mcp.ska, aes(percent, area)) +
geom_point() +
geom_path() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
# Make sf object.
sf.ska <- st_as_sf(ska, coords=c('lon', 'lat'))
sf.ska <- st_set_crs(sf.ska, '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')
# Transform to UTM so area makes sense.
sf.ska <- st_transform(sf.ska, "+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Look at area.
mcp.ska <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
rename(area=a)
ggplot(mcp.ska, aes(percent, area)) +
geom_point() +
geom_path() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
View(mcp.ska)
mcp.s <- sf.ska %>% as_Spatial()
View(mcp.s)
View(sf.ska)
mcp(mcp.s$id, percent = 100)
mcp.s <- sf.ska %>% as_Spatial()
class(mcp.s)
mcp(mcp.s$id, percent = 100)
mcp(mcp.s, percent = 100)
class(sf.ska)
mcp.s <- sf.ska %>%
select(id, geometry) %>% as_Spatial()
mcp.s <- select(sf.ska, id, geometry)
mcp.s <- select(sf.ska, id, speed)
mcp.s <- select(sf.ska, speed, volt)
mcp.s <- dplyr::select(sf.ska, speed, volt)
mcp.s <- sf.ska %>%
dplyr::select(id, geometry) %>%
as_Spatial()
View(mcp.s)
mcp(mcp.s, percent = 100)
# BUT I need to separate seasons, so I guess I'd better do that first.
mcp.s <- sf.ska %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime))),
period=case_when(
yrls %within% incubation ~ 'incubation',
yrls %within% nestling ~ 'nestling',
yrls %within% fledgling ~ 'fledgling',
yrls %within% winter1 ~ 'winter',
yrls %within% winter2 ~ 'winter'
)
) %>%
dplyr::select(geometry, period)
library('lubridate')
# BUT I need to separate seasons, so I guess I'd better do that first.
mcp.s <- sf.ska %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime))),
period=case_when(
yrls %within% incubation ~ 'incubation',
yrls %within% nestling ~ 'nestling',
yrls %within% fledgling ~ 'fledgling',
yrls %within% winter1 ~ 'winter',
yrls %within% winter2 ~ 'winter'
)
) %>%
dplyr::select(geometry, period)
winter2 <- interval(ymd(20190101), ymd(20190414))
incubation <- interval(ymd(20190415), ymd(20190510))
nestling <- interval(ymd(20190511), ymd(20190710))
fledgling <- interval(ymd(20190711), ymd(20190901))
winter1 <- interval(ymd(20190902), ymd(20191231))
mcp.s <- sf.ska %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime))),
period=case_when(
yrls %within% incubation ~ 'incubation',
yrls %within% nestling ~ 'nestling',
yrls %within% fledgling ~ 'fledgling',
yrls %within% winter1 ~ 'winter',
yrls %within% winter2 ~ 'winter'
)
) %>%
dplyr::select(geometry, period)
mcp(mcp.s, percent = 100)
mcp.s <- sf.ska %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime))),
period=case_when(
yrls %within% incubation ~ 'incubation',
yrls %within% nestling ~ 'nestling',
yrls %within% fledgling ~ 'fledgling',
yrls %within% winter1 ~ 'winter',
yrls %within% winter2 ~ 'winter'
)
) %>%
dplyr::select(geometry, period) %>%
as_Spatial()
mcp(mcp.s, percent = 100)
mcp.by.period <- mcp.s %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
rename(area=a)
mcp.by.period <- mcp.s %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE)
View(mcp.by.period)
mcp.by.period <- mcp.s %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name')
View(mcp.by.period)
mcp.by.period <- mcp.s %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name))
mcp.by.period
mcp.by.period <- mcp.s %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
select(-name)
mcp.by.period
mcp.by.period <- mcp.s %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
dplyr::select(-name)
mcp.by.period
pivot_longer(mcp.by.period, cols=c('fledgling', 'nestling', 'winter'), names_to='period')
library('tidyr')
pivot_longer(mcp.by.period, cols=c('fledgling', 'nestling', 'winter'), names_to='period')
pivot_longer(mcp.by.period, cols=c('fledgling', 'nestling', 'winter'), names_to='period')
install.packages("tidyverse")
library('tidyverse')
library('sf')
library('rgdal')
library('adehabitatHR')
library('ggplot2')
library('ggspatial')
library('tibble')
library('lubridate')
df <- read.csv('../data/processed/telem_all.csv', header=TRUE, stringsAsFactors=FALSE)
# Separate just the Skaiakos points to work with for now.
ska <- df %>%
filter(site == 'SKA') %>%
drop_na('lat')
# Make a classic 90% MCP for comparison.
mcp.90 <- SpatialPoints(ska[, c('lon', 'lat')], proj4string=CRS("+init=epsg:4326")) %>%
mcp(percent=90)
ggplot() +
geom_sf(data=st_as_sf(mcp.90)) +
#theme_minimal() +
theme(panel.grid.major=element_line(color='transparent'),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.background=element_rect(fill='transparent')) +
annotation_scale(style='ticks', location='bl', width_hint=0.4)
ggplot() +
geom_sf(data=mcp.90) +
#theme_minimal() +
theme(panel.grid.major=element_line(color='transparent'),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.background=element_rect(fill='transparent')) +
annotation_scale(style='ticks', location='bl', width_hint=0.4)
df <- read.csv('../data/processed/telem_all.csv', header=TRUE, stringsAsFactors=FALSE)
# Separate just the Skaiakos points to work with for now.
ska <- df %>%
filter(site == 'SKA') %>%
drop_na('lat')
# Make sf object.
sf.ska <- st_as_sf(ska, coords=c('lon', 'lat'))
sf.ska <- st_set_crs(sf.ska, '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')
# Transform to UTM so area makes sense.
sf.ska <- st_transform(sf.ska, "+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs")
# Look at area.
mcp.ska <- sf.ska %>% as_Spatial() %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
rename(area=a)
ggplot(mcp.ska, aes(percent, area)) +
geom_point() +
geom_path() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
View(mcp.ska)
winter2 <- interval(ymd(20190101), ymd(20190414))
incubation <- interval(ymd(20190415), ymd(20190510))
nestling <- interval(ymd(20190511), ymd(20190710))
fledgling <- interval(ymd(20190711), ymd(20190901))
winter1 <- interval(ymd(20190902), ymd(20191231))
View(sf.ska)
sf.ska.per <- sf.ska %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime))),
period=case_when(
yrls %within% incubation ~ 'incubation',
yrls %within% nestling ~ 'nestling',
yrls %within% fledgling ~ 'fledgling',
yrls %within% winter1 ~ 'winter',
yrls %within% winter2 ~ 'winter'
)
) %>%
dplyr::select(geometry, period) %>%
as_Spatial()
mcp.by.period <- sf.ska.per %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
dplyr::select(-name)
View(mcp.by.period)
pivot_longer(mcp.by.period, cols=c('fledgling', 'nestling', 'winter'), names_to='period')
pivot_longer(mcp.by.period, cols=c('fledgling', 'nestling', 'winter'), names_to='period', digits=2)
mcp.by.period <- pivot_longer(mcp.by.period,
cols=c('fledgling', 'nestling', 'winter'), names_to='period')
ggplot(mcp.by.period, aes(percent, value)) +
geom_smooth(se=FALSE, group=period) +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
ggplot(mcp.by.period, aes(percent, value)) +
geom_point() +
theme_minimal() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
ggplot(mcp.by.period, aes(percent, value, color=period)) +
geom_point() +
theme_classic() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
ggplot(mcp.by.period, aes(percent, value, color=period)) +
geom_point() +
geom_path() +
theme_classic() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
# Then graph it.
ggplot(mcp.by.period, aes(percent, value, color=period)) +
geom_point() +
geom_path() +
theme_classic() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
# Load in periods from previous notebook.
winter2 <- interval(ymd(20190101), ymd(20190414))
incubation <- interval(ymd(20190415), ymd(20190510))
nestling <- interval(ymd(20190511), ymd(20190710))
fledgling <- interval(ymd(20190711), ymd(20190901))
winter1 <- interval(ymd(20190902), ymd(20191231))
# Divide data into periods
sf.ska.per <- sf.ska %>%
mutate(yrls=ymd(paste(2019, month(datetime), day(datetime))),
period=case_when(
yrls %within% incubation ~ 'incubation',
yrls %within% nestling ~ 'nestling',
yrls %within% fledgling ~ 'fledgling',
yrls %within% winter1 ~ 'winter',
yrls %within% winter2 ~ 'winter'
)
) %>%
dplyr::select(geometry, period) %>%
as_Spatial()
# Calculate MCPs
mcp.by.period <- sf.ska.per %>%
mcp.area(percent=seq(20, 100, by=10),
unin='m', unout='ha', plotit=FALSE) %>%
rownames_to_column(var='name') %>%
mutate(percent=as.numeric(name)) %>%
dplyr::select(-name)
# Fix formatting so it can actually be graphed.
mcp.by.period <- pivot_longer(mcp.by.period,
cols=c('fledgling', 'nestling', 'winter'), names_to='period')
# Then graph it.
ggplot(mcp.by.period, aes(percent, value, color=period)) +
geom_point() +
geom_path() +
theme_classic() +
theme(panel.grid=element_line(color='white')) +
labs(x='Percent of location points', y='Home range area (ha)', title='Skaiakos')
install.packages("move")
library('move')
View(ska)
# Make a move object
ska$datetime <- ymd_hms(df$datetime, tz='America/Vancouver')
# Make a move object
ska$datetime <- ymd_hms(ska$datetime, tz='America/Vancouver')
move.ska <- move(x=ska$lon, y=ska$lat, time=ska$datetime)
move.ska <- move(x=ska$lon, y=ska$lat, time=ska$datetime, proj=CRS("+proj=longlat"))
View(sf.ska)
# Make a move object
sf.ska$datetime <- ymd_hms(sf.ska$datetime, tz='America/Vancouver')
move.ska <- move(x=ska$lon, y=ska$lat, time=ska$datetime, proj=CRS("+proj=longlat"))
hrBootstrap(x=move.ska, rep=25, unin='km', unout='km2')
hrBootstrap(x=move.ska, rep=25, unin='km', unout='km2', plot=FALSE)
sf.ska %>% as_Spatial() %>%
hrBootstrap(rep=25, unin='km', unout='km2', plot=FALSE)
hr <- hrBootstrap(x=move.ska, rep=25, unin='km', unout='km2', plot=FALSE)
View(hr)
ska$datetime <- ymd_hms(ska$datetime, tz='America/Vancouver')
move.ska <- move(x=ska$lon, y=ska$lat, time=ska$datetime, proj=CRS("+proj=longlat"))
hrBootstrap(x=move.ska, rep=25, unin='km', unout='km2', plot=TRUE)
hr <- hrBootstrap(x=move.ska, rep=25, unin='km', unout='km2', plot=TRUE)
View(hr)
View(move.ska)
View(sf.ska.per)
