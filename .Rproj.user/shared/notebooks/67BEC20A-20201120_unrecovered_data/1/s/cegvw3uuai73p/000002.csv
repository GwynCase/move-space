"0","# Define breeding season."
"0","breeding.2018 <- interval(ymd(20180420), ymd(20180915))"
"0","breeding.2019 <- interval(ymd(20190420), ymd(20190915))"
"0","breeding.2020 <- interval(ymd(20200420), ymd(20200915))"
"0",""
"0","# Select only points that fall within the breeding season."
"0","df.breeding <- df %>% "
"0","  filter(date %within% c(breeding.2018, breeding.2019, breeding.2020))"
"2","longer object length is not a multiple of shorter object length"
"2","longer object length is not a multiple of shorter object length"
"2","longer object length is not a multiple of shorter object length"
"0","# Calculate days of data."
"0","avail.data.br <- df.breeding %>% group_by(id) %>% "
"0","  mutate(min=min(date), max=max(date), n.points=n(), period=max-min) %>% "
"0","  distinct(id, site, n.points, min, max, period) "
"0",""
"0","# Then join them together."
"0","t.data.br <- select(avail.data.br, id, site, period) %>% right_join(captures, by=c('site', 'id')) %>% "
"0","  mutate(period=as.numeric(period), e.time=as.numeric(e.time)) %>% "
"0","  replace_na(list(period=0))"
"0",""
"0","# Calculate percentage of days retrieved."
"0","t.data.br %>% mutate(p.time=period/e.time*100)"
