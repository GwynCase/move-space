"0","# Separate out RLK points."
"0","rlk <- filter(tl.breeding, id == 'HAR04')"
"0",""
"0","# Calculate sunrise and sunset."
"0","suntimes <- getSunlightTimes(data=rlk, keep=c('sunrise', 'sunset'), "
"0","                        tz='America/Vancouver')"
"0",""
"0","# Filter out daytime points."
"0","rlk <- left_join(rlk, suntimes, by=c('lat', 'lon', 'date')) %>%"
"0","  filter(hour(datetime) > hour(sunrise)) %>%"
"0","  filter(hour(datetime) < hour(sunset))"
"0",""
"0","# Make a spatial object and convert to UTMs."
"0","rlk.sf <- rlk %>% st_as_sf(coords=c('lon', 'lat')) %>%"
"0","  st_set_crs('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%"
"0","  st_transform(""+proj=utm +zone=10 +datum=WGS84 +units=m +no_defs"")"
"0",""
"0","# Convert back to data frame."
"0","rlk.sf.c <- rlk.sf %>% mutate(xcoord = unlist(map(rlk.sf$geometry,1)),"
"0","       ycoord = unlist(map(rlk.sf$geometry,2))) %>% "
"0","  data.frame() %>% "
"0","  select(xcoord, ycoord, datetime, id)"
"0",""
"0","# Calculate revisits."
"0","rlk.visit <- getRecursions(rlk.sf.c, 100)"
"0",""
"0","# And plot them."
"0","plot(rlk.visit, rlk.sf.c, axes=FALSE)"
